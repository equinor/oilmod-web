{
  "name": "oilmod-web",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/oilmod-web/src",
  "prefix": "oilmod-web-nx",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@nx/angular:application",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/oilmod-web",
        "index": "apps/oilmod-web/src/index.html",
        "browser": "apps/oilmod-web/src/main.ts",
        "polyfills": ["apps/oilmod-web/src/polyfills.ts"],
        "tsConfig": "apps/oilmod-web/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/oilmod-web/src/favicon.ico",
          "apps/oilmod-web/src/assets"
        ],
        "styles": [
          "apps/oilmod-web/src/styles.scss",
          "libs/core/src/ngx-stoui.scss"
        ],
        "scripts": []
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "1.5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "fileReplacements": [
            {
              "replace": "apps/oilmod-web/src/environments/environment.ts",
              "with": "apps/oilmod-web/src/environments/environment.prod.ts"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "optimization": false,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@nx/angular:dev-server",
      "configurations": {
        "production": {
          "buildTarget": "oilmod-web:build:production"
        },
        "development": {
          "buildTarget": "oilmod-web:build:development"
        }
      },
      "defaultConfiguration": "development",
      "continuous": true
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "oilmod-web:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint",
      "outputs": ["{options.outputFile}"]
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/oilmod-web"],
      "options": {
        "jestConfig": "apps/oilmod-web/jest.config.ts"
      }
    },
    "storybook": {
      "executor": "@storybook/angular:start-storybook",
      "options": {
        "port": 4400,
        "configDir": "apps/oilmod-web/.storybook",
        "browserTarget": "oilmod-web:build",
        "compodoc": false,
        "styles": [
          "apps/oilmod-web/src/styles.scss",
          "libs/core/src/ngx-stoui.scss"
        ],
        "stylePreprocessorOptions": {
          "includePaths": ["node_modules", "libs/core/src/style"]
        }
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "build-storybook": {
      "executor": "@storybook/angular:build-storybook",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputDir": "dist/storybook/oilmod-web",
        "configDir": "apps/oilmod-web/.storybook",
        "browserTarget": "oilmod-web:build",
        "compodoc": false,
        "styles": [
          "apps/oilmod-web/src/styles.scss",
          "libs/core/src/ngx-stoui.scss"
        ],
        "stylePreprocessorOptions": {
          "includePaths": ["node_modules", "libs/core/src/style"]
        }
      },
      "configurations": {
        "ci": {
          "quiet": true
        }
      }
    },
    "build-all": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx build testing",
          "nx build core",
          "nx build form",
          "nx build common",
          "nx build datatable",
          "nx build drawer",
          "nx build error-handler",
          "for dir in ./dist/libs/* ; do cp license.md $dir/ ; done"
        ],
        "parallel": false
      }
    },
    "test-all": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx test core",
          "nx test form",
          "nx test common",
          "nx test datatable",
          "nx test drawer",
          "nx test error-handler"
        ],
        "parallel": true
      }
    },
    "lint-all": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx lint core --fix",
          "nx lint form --fix",
          "nx lint common --fix",
          "nx lint datatable --fix",
          "nx lint drawer --fix",
          "nx lint error-handler --fix"
        ],
        "parallel": true
      }
    }
  }
}
